const Kafka = require('node-rdkafka');

let options = {
    'client.id': 'test',
    'metadata.broker.list': 'localhost:9092',
    'compression.codec': 'none',
    'retry.backoff.ms': 200,
    'message.send.max.retries': 10,
    'socket.keepalive.enable': true,
    'queue.buffering.max.messages': 100000,
    'queue.buffering.max.ms': 1000,
    'message.timeout.ms': 10000,
    'dr_msg_cb': true
};
let i = 0;
let topicOpts = {
    'request.required.acks': -1
};

producer = new Kafka.Producer(options, topicOpts);

producer.connect({}, (err) => {
    if(err)
        console.error(err);
});

//required for delivery-report event to be heard
producer.setPollInterval(1000);

const foo = () => {
    producer.getMetadata({
        timeout: 1000,
    }, (err, data) => {
        if (err) {
            console.log('error:', err);
        } else {
            console.log('data:', data);
        }
    });
};

const bar = () => {
    producer.produce(
        //topic
        'three',
        //partition, default is -1
        -1,
        //message
        new Buffer((i++).toString()),
        //key
        null,
        //timestamp
        Date.now()
    );

};

producer.on('ready', () => {
    setInterval(bar, 1500)
});
producer.on('delivery-report', function(err, report) {
    if (err) {
        console.log('Delivery report: Failed sending message ' + JSON.stringify(report));
        // console.error(err);
        // We could retry sending the message or store it locally
    } else {
        console.log('Message produced, offset: ' + report.offset);
    }
});
